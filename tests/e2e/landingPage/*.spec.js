var LandingPage = require('./landingPage.po.js');/* This is landing page browser testing */describe('landingPage Tests', function () {    var landingPage = new LandingPage();    beforeEach(function(){        landingPage.geturllanding();        browser.waitForAngular();    });    it('should do a one-way search for 1 Adult and then move to the listing page', function () {           //landingPage.searchType.$('[value="Oneway"]').click();           landingPage.searchType.count().then(console.log);       landingPage.searchType.get(1).click();               landingPage.origin.sendKeys('Duba').then(function () {           browser.driver.sleep(2000);           landingPage.origin.sendKeys(protractor.Key.ENTER);       });       landingPage.destination.sendKeys('laho').then(function () {           browser.driver.sleep(2000);           landingPage.destination.sendKeys(protractor.Key.ENTER);       });           /* use npm module protractor-angulardatepicker to pick dates */       browser.driver.sleep(2000);       landingPage.dates.click();       landingPage.dates.clear().then(function () {           browser.driver.sleep(2000);           //landingPage.dates.sendKeys("16 Nov 2015").ENTER;           //landingPage.dates.sendKeys(protractor.Key.ENTER);           landingPage.nextmonthoftheyear.click();           browser.driver.sleep(2000);           landingPage.traveldate.click();           browser.driver.sleep(2000);       });           browser.driver.sleep(2000);       landingPage.cabin.$('[value="string:Business"]').click();       browser.driver.sleep(2000);           landingPage.searchButton.click().then(function () {           browser.waitForAngular();           browser.driver.sleep(20000);           expect(element(By.binding('page.text')).isPresent()).toBe(true);       });    });        it('should do a roundtrip search for 2 Adults and 1 child and move to listing page', function () {       //landingPage.roundtrip.click();       landingPage.searchType.count().then(console.log);       landingPage.searchType.get(0).click();       browser.driver.sleep(2000);           landingPage.origin.clear();       landingPage.origin.sendKeys('Duba').then(function () {           browser.driver.sleep(2000);           landingPage.origin.sendKeys(protractor.Key.ENTER);       });       landingPage.destination.clear();       landingPage.destination.sendKeys('laho').then(function () {           browser.driver.sleep(2000);           landingPage.destination.sendKeys(protractor.Key.ENTER);       });           landingPage.cabin.$('[value="string:Economy"]').click();       browser.driver.sleep(2000);           landingPage.adultselector.click().then(function () {           console.log("in adult selector");           landingPage.addpaxplus.click();           landingPage.addpaxplus.click();           browser.driver.sleep(2000);       });           landingPage.childselector.click().then(function () {           console.log("In child selector");           landingPage.addpaxplus.click();           browser.driver.sleep(10000);       });               /* use npm module protractor-angulardatepicker to pick dates */      // browser.driver.sleep(10000);      // landingPage.dates.click();      // //element(By.css('div.calendar.right').all(By.css('th.next.available')))      // landingPage.nextmonthoftheyear.click().then(function(){      //     console.log("I am into dates function.................");      //     browser.driver.sleep(50000);      //     //landingPage.datesstart.sendKeys("2 Nov 2015");      //     //browser.driver.sleep(2000);      //     //landingPage.datesend.sendKeys("10 Nov 2015");      //     //browser.driver.sleep(2000);      //      //     //landingPage.calenderright.click().then(function(){      //     //    browser.driver.sleep(2000);      //         landingPage.traveldate1.click();      //         browser.driver.sleep(20000);      //    // });      //      //     landingPage.calenderright.click().then(function(){      //         browser.driver.sleep(2000);      //         landingPage.traveldate1.click();      //         browser.driver.sleep(2000);      //     });      //});               landingPage.searchButton.click().then(function () {           browser.waitForAngular();           browser.driver.sleep(20000);           expect(element(By.binding('page.text')).isPresent()).toBe(true);       });            });            it("should do a MultiCity 2 Trip search and booking flow for 2 Adults ,1 Child, 2 infant", function () {       landingPage.searchType.get(2).click();       browser.waitForAngular();           landingPage.multicityselectordropdown.$('[value="number:2"]').click();       landingPage.cabin.$('[value="string:Economy"]').click();       browser.driver.sleep(2000);               /* Enter cities for first leg */           landingPage.multicitylegs.then(function ($index) {           var origin1 = $index[0].element(By.model('Leg.Origin'));           origin1.clear();           origin1.sendKeys('Dubai').then(function () {               browser.waitForAngular();               origin1.sendKeys(protractor.Key.ENTER);               browser.driver.sleep(200);           });       });           landingPage.multicitylegs.then(function ($index) {           var destination1 = $index[0].element(By.model('Leg.Destination'));           destination1.clear();           destination1.sendKeys('Manil').then(function () {               browser.waitForAngular();               destination1.sendKeys(protractor.Key.ENTER);               browser.driver.sleep(200);           });       });       landingPage.multicitylegs.then(function ($index) {           var dates1 = $index[0].element(By.model('Leg.datesObject'));           dates1.clear();           //dates1.sendKeys('20 Nov 2015').ENTER;           //dates1.sendKeys(protractor.Key.ENTER);           browser.driver.sleep(200);           dates1.click();           landingPage.nextmonthoftheyear.click();           browser.driver.sleep(2000);           landingPage.traveldate.click();           browser.driver.sleep(2000);       });                   /* Enter cities for second leg */           landingPage.multicitylegs.then(function ($index) {           var origin1 = $index[1].element(By.model('Leg.Origin'));           origin1.sendKeys('Manila').then(function () {               browser.waitForAngular();               origin1.sendKeys(protractor.Key.ENTER);               browser.driver.sleep(200);           });       });           landingPage.multicitylegs.then(function ($index) {           var destination1 = $index[1].element(By.model('Leg.Destination'));           destination1.sendKeys('Lahore').then(function () {               browser.waitForAngular();               destination1.sendKeys(protractor.Key.ENTER);               browser.driver.sleep(200);           });       });       landingPage.multicitylegs.then(function ($index) {           var dates1 = $index[1].element(By.model('Leg.datesObject'));           dates1.clear();           //dates1.sendKeys('25 Nov 2015').ENTER;           //dates1.sendKeys(protractor.Key.ENTER);           browser.driver.sleep(200);           dates1.click();           landingPage.nextmonthoftheyear.click();           landingPage.nextmonthoftheyear.click();               browser.driver.sleep(2000);           landingPage.traveldate.click();           browser.driver.sleep(2000);       });               landingPage.searchButton.click().then(function () {           browser.waitForAngular();           browser.driver.sleep(20000);           expect(element(By.binding('page.text')).isPresent()).toBe(true);               browser.driver.sleep(2000);       });        });    /*****  UI testcases *****/    it("LP1 : should Verify that the origin textfield renders city suggestions as dropdown list , on typing first 3 chararcters", function(){        landingPage.origin.clear();        landingPage.origin.sendKeys('lon').then(function(){            browser.driver.sleep(2000);            landingPage.origin.sendKeys(protractor.Key.ENTER);            browser.driver.sleep(2000);            landingPage.origin.getAttribute('value').then(function (value) {                expect(value).toContain('London');            });        });    });    it("LP2 : Verify that the destination textfield renders city suggestions as dropdown list , on typing first 3 chararcters", function(){        landingPage.destination.clear();        landingPage.destination.sendKeys('ist').then(function(){            browser.driver.sleep(2000);            landingPage.destination.sendKeys(protractor.Key.ENTER);            browser.driver.sleep(2000);            landingPage.destination.getAttribute('value').then(function (value) {                expect(value).toContain('Istanbul');            });        });    });    it("LP3 : should verify the include nearby for origin field", function() {        landingPage.searchType.count().then(console.log);        landingPage.searchType.get(1).click();        landingPage.origin.clear();        landingPage.origin.sendKeys('london').then(function () {            browser.driver.sleep(2000);            landingPage.origin.sendKeys(protractor.Key.ENTER);        });        landingPage.nearbyOrigin.click();        landingPage.destination.clear();        landingPage.destination.sendKeys('mumbai').then(function () {            browser.driver.sleep(2000);            landingPage.destination.sendKeys(protractor.Key.ENTER);        });        /* use npm module protractor-angulardatepicker to pick dates */        browser.driver.sleep(2000);        landingPage.dates.click();        landingPage.dates.clear().then(function () {            browser.driver.sleep(2000);            landingPage.nextmonthoftheyear.click();            browser.driver.sleep(2000);            landingPage.traveldate.click();            browser.driver.sleep(2000);        });        browser.driver.sleep(2000);        landingPage.cabin.$('[value="string:Business"]').click();        browser.driver.sleep(2000);        landingPage.searchButton.click().then(function () {            browser.ignoreSynchronization = true;            browser.waitForAngular();            browser.driver.sleep(20000);            expect(element(By.binding('page.text')).isPresent()).toBe(true);            expect(element(By.model('config.filters')).isPresent()).toBe(true);        });        expect(element.all(By.repeater('AirportFilter in AirportLeg.Origin track by $index')).count()).toBeGreaterThan(1);        expect(element.all(By.repeater('AirportFilter in AirportLeg.Destination track by $index')).count()).toEqual(1);        var count = element.all(by.repeater('AirportFilter in AirportLeg.Origin track by $index'));        count.then(function(result){            console.log("First test no. of origin"+ result.length);            console.log(result.count);        });    });    it("LP4 : should verify the include nearby for destination", function(arg) {        landingPage.searchType.count().then(console.log);        landingPage.searchType.get(1).click();        landingPage.origin.clear();        landingPage.origin.sendKeys('london').then(function () {            browser.driver.sleep(2000);            landingPage.origin.sendKeys(protractor.Key.ENTER);        });        landingPage.destination.clear();        landingPage.destination.sendKeys('mumbai').then(function () {            browser.driver.sleep(2000);            landingPage.destination.sendKeys(protractor.Key.ENTER);        });        landingPage.nearbyDestination.click();        /* use npm module protractor-angulardatepicker to pick dates */        browser.driver.sleep(2000);        landingPage.dates.click();        landingPage.dates.clear().then(function () {            browser.driver.sleep(2000);            landingPage.nextmonthoftheyear.click();            browser.driver.sleep(2000);            landingPage.traveldate.click();            browser.driver.sleep(2000);        });        browser.driver.sleep(2000);        landingPage.cabin.$('[value="string:Economy"]').click();        browser.driver.sleep(2000);        landingPage.searchButton.click().then(function () {            browser.waitForAngular();            browser.driver.sleep(20000);            expect(element(By.binding('page.text')).isPresent()).toBe(true);            expect(element(By.model('config.filters')).isPresent()).toBe(true);        });        expect(element.all(By.repeater('AirportFilter in AirportLeg.Origin track by $index')).count()).toBeGreaterThan(1);        expect(element.all(By.repeater('AirportFilter in AirportLeg.Destination track by $index')).count()).toEqual(1);        var count = element.all(By.repeater('AirportFilter in AirportLeg.Origin track by $index'));        count.then(function(result){            console.log("First test no. of origin"+ result.length);            console.log(result.count);        });    });    it("UI-LP-5 : Verify that 4 types of cabin class are offered for booking.", function(){        landingPage.cabinDropDownItems().then(function(items) {            expect(items.length).toBe(4);        });    });    ////todo    it("UI-LP-6 : Verify the 'Cabin'(Class of selection) dropdown field-----notok", function(){        landingPage.cabinDropDownItems().then(function(items) {            expect(items[0].getText()).toBe('Economy');            expect(items[1].getText()).toBe('Premium Economy');            expect(items[2].getText()).toBe('Business');            expect(items[3].getText()).toBe('First');        });    });    it("UI-LP-7 : Verify that selecting a date on datepicker shows correct date on the field", function () {        landingPage.dates.clear();        landingPage.dates.click();        landingPage.nextmonthoftheyear.click();        browser.driver.sleep(2000);        landingPage.traveldate.click();        browser.driver.sleep(2000);        landingPage.origin.getAttribute('value').then(function (value) {            expect(value).toContain('201');        });    //http://stackoverflow.com/questions/27820550/protractor-testing-date-text-with-various-formats    });    it("UI-LP-8 : Verify that Journey Types are of three types One-Way, Round-Trip, Multi-City-------OK",function(){     landingPage.searchType.then(function(items){        expect(items.length).toBe(3);         expect(items[0].getText()).toBe('RoundTrip');         expect(items[1].getText()).toBe('One-way');         expect(items[2].getText()).toBe('Multi-city');     });    });    it("UI-LP-9 : Verify that on selecting 'One way' as search type , only one date picker is displayed on screen with one set of 'Origin-Destination' Leg textboxes", function(){        landingPage.searchType.get(1).click();        browser.driver.sleep(500);            landingPage.dates.click().then(function(){                expect(landingPage.calendersingle.isDisplayed()).toBe(true);                expect(landingPage.datesstart.isDisplayed()).toBe(false);                expect(landingPage.datesend.isDisplayed()).toBe(false);            });    });    it("UI-LP-10 : Verify that on selecting 'Round trip' as search type , two date pickers for (forward and return) are displayed on screen with one set of 'Origin-Destination' Leg textboxes", function(){        landingPage.searchType.get(0).click();        browser.driver.sleep(500);        landingPage.dates.click().then(function(){            expect(landingPage.calendersingletable.isDisplayed()).toBe(true);            expect(landingPage.datesstart.isDisplayed()).toBe(true);            expect(landingPage.datesend.isDisplayed()).toBe(true);        });    });    it("UI-LP-11 : Verify 'MultiCity' page layout", function(){        landingPage.searchType.get(2).click();        browser.waitForAngular();        landingPage.multicityselectordropdown.$('[value="number:2"]').click();        browser.driver.sleep(500);        landingPage.multicitylegs.then(function ($index) {            var dates1 = $index[0].element(By.model('Leg.datesObject'));            dates1.click().then(function () {                expect(landingPage.calendersingle.isDisplayed()).toBe(true);                expect(landingPage.datesstart.isDisplayed()).toBe(false);                expect(landingPage.datesend.isDisplayed()).toBe(false);            });        });    });    it("UI-LP-14 : Verify that on selecting 'MultiCity' and selecting no. of legs as 3 ,  3set of 'Origin-Destination' Leg textboxes are displayed", function(){       landingPage.searchType.get(2).click();        browser.waitForAngular();        landingPage.multicitylegs.then(function ($index) {            $index[2].multicityremove.click();            landingPage.multicityadd.click();            landingPage.multicityadd.click();            landingPage.multicityadd.click();            last.multicityremove.click();            expect(index.length).toBe(4);        });    });    it("UI-LP-15 : Verify the default Leg count while selecting a multicity search", function() {        landingPage.searchType.get(2).click();        browser.waitForAngular();        landingPage.multicitylegs.then(function ($index) {            expect($index[0].isDisplayed()).toBe(true);            expect($index[1].isDisplayed()).toBe(true);            expect($index[2].isDisplayed()).toBe(true);            expect($index[3].isDisplayed()).toBe(false);        });    });    it("UI-LP-17 : Verify that on selecting 'MultiCity' ,there is a  limit of max -6 legs and min -2 legs", function () {        landingPage.searchType.get(2).click();        browser.waitForAngular();        browser.driver.sleep(10000);        //landingPage.multicitylegs.get(2).all(By.css('i.fa.fa-minus')).isDisplayed().toBe(true);        //element.all(By.repeater('(LegIndex, Leg) in FlightLegs track by $index').row(2)).all(By.css('button.tj-fsearch__remove-city')).click();        //landingPage.multicityremove.click();        browser.driver.sleep(10000);        landingPage.multicitylegs.count().then(console.log);        browser.driver.sleep(10000);        expect(landingPage.multicitylegs.count()).toBe(3);        //element.all(By.repeater('(LegIndex, Leg) in FlightLegs track by $index').row(1)).all(By.css('i.fa.fa-minus')).click();        //expect(element.all(By.repeater('(LegIndex, Leg) in FlightLegs track by $index').row(1)).isElementPresent(By.css('i.fa.fa-minus'))).toBe(true);        landingPage.multicityadd.click();        landingPage.multicityadd.click();        //landingPage.multicityadd.click();        //landingPage.multicityadd.click();        landingPage.multicitylegs.count().then(console.log);    });});